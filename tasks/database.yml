---
- name: Create Icinga Web 2 Database
  community.mysql.mysql_db:
    name: "{{ icingaweb2_db_name }}"
    login_host: "{{ icingaweb2_db_host }}"
    login_user: "{{ icingaweb2_db_admin_user }}"
    login_password: "{{ icingaweb2_db_admin_password }}"
    collation: utf8_general_ci
    encoding: utf8
    state: present
  when: icingaweb2_db_create

# FIXME: if icingaweb2_db_host != icinga2_ido_db_host use two tasks with two different privs!
- name: Create Icinga Web 2 Database User
  community.mysql.mysql_user:
    login_host: "{{ icingaweb2_db_host }}"
    login_user: "{{ icingaweb2_db_admin_user }}"
    login_password: "{{ icingaweb2_db_admin_password }}"
    name: "{{ icingaweb2_db_user }}"
    password: "{{ icingaweb2_db_password }}"
    host: "{{ icingaweb2_db_user_host }}"
    priv: "{{ icingaweb2_db_name }}.*:{{ icingaweb2_db_user_privileges }}/{{ icingaweb2_ido_db_name }}.*:{{ icingaweb2_ido_db_user_privileges }}"
    state: present
  when: icingaweb2_db_user_create

- name: Drop tables from Icingaweb2 Database
  ansible.builtin.shell: |
    set -o pipefail
    '{{ _mysql_cmd }} -Nse "SHOW TABLES;" {{ icingaweb2_db_name }} | while read table;
     do {{ _mysql_cmd }} -e "DROP TABLE $table" {{ icingaweb2_db_name }};
     done'
  when: icingaweb2_db_create and (icingaweb2_db_purge or icingaweb2_db_purge|bool)
  register: output
  changed_when: output.rc != 0

- name: Get tables in Icingaweb2 Database
  ansible.builtin.shell: '{{ _mysql_cmd }} -Nse "SHOW TABLES;" {{ icingaweb2_db_name }}'
  register: icingaweb2_db_tables
  changed_when: icingaweb2_db_tables.rc != 0
  when: icingaweb2_db_create

- name: Check if Icingaweb2 Database Schema file exists
  ansible.builtin.stat:
    path: "{{ icingaweb2_db_schema_file_path }}"
  register: icingaweb2_db_schema_file
  when: icingaweb2_db_create

- name: Import Icingaweb2 Database Schema
  community.mysql.mysql_db:
    name: "{{ icingaweb2_db_name }}"
    login_host: "{{ icingaweb2_db_host }}"
    login_user: "{{ icingaweb2_db_user }}"
    login_password: "{{ icingaweb2_db_password }}"
    state: import
    target: "{{ icingaweb2_db_schema_file_path }}"
  when: >
    icingaweb2_db_create
    and icingaweb2_db_schema_file is defined
    and icingaweb2_db_schema_file.stat is defined
    and icingaweb2_db_schema_file.stat.exists
    and icingaweb2_db_tables.stdout_lines == []
